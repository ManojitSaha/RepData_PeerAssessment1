FUN=mean,
na.rm=TRUE)
names(mean_data) <- c("interval", "mean")
head(mean_data)
```
```{r}
mean_data <- aggregate(data$steps,
list(interval = as.numeric(as.character(data$interval))),
FUN = "mean",
na.rm=TRUE)
colnames(mean_data) <- c("interval", "mean")
plot(mean_data$interval, mean_data$mean, type="l", col="blue")
```
## Imputing missing values
###1.Calculate and report the total number of missing values in the dataset (i.e. the total number of rows with NAs)
```{r}
NA_count <- sum(is.na(data$steps))
NA_pos <- which(is.na(data$steps))
```
###2.Devise a strategy for filling in all of the missing values in the dataset.
```{r}
mean_vec <- rep(mean(data$steps, na.rm=TRUE), times=length(NA_pos))
```
###3.Create a new dataset that is equal to the original dataset but with the missing data filled in.
```{r}
data_NAN <- data
data_NAN[NA_pos, "steps"] <- mean_vec
head(data_NAN)
```
###4. Make a histogram of the total number of steps taken each day and Calculate and report the mean and median total number of steps taken per day.
```{r}
agg_data <- aggregate(data_NAN$steps, by=list(data_NAN$date), FUN=sum)
names(agg_data) <- c("date", "total")
hist(agg_data$total,
breaks=seq(from=0, to=25000, by=2500),
col="green",
xlab="Total number of steps",
ylim=c(0, 30),
main="Histogram of the total number of steps taken each day\n(NA replaced by mean value)")
```
```{r}
round(mean(agg_data$total))
round(median(agg_data$total))
```
## Are there differences in activity patterns between weekdays and weekends?
```{r}
agg <- aggregate(steps ~ interval + daytype, data=data, mean)
plot4 <- xyplot(agg$Steps ~ agg$interval | agg$daytype,
layout = c(1, 2), type = "l",
xlab = "Interval", ylab = "Number of steps")
```
```{r}
library(knitr)
opts_chunk$set(echo = TRUE, results = 'hold')
library(data.table)
library(ggplot2)
```
---
title: "Reproducible Research: Peer Assessment 1"
output:
html_document:
keep_md: true
---
## Loading and preprocessing the data
```{r}
setwd("G:/Github/RepData_PeerAssessment1")
unzip(zipfile="activity.zip")
data <- read.csv("activity.csv", header = TRUE, sep = ',', colClasses = c("numeric", "character", "integer"))
data$date <- as.Date(data$date, format = "%Y-%m-%d")
data$interval <- as.factor(data$interval)
data$weekday <- tolower(weekdays(data$date))
data$daytype <- ifelse(data$weekday == "saturday" | data$weekday == "sunday", "weekend", "weekday")
str(data)
```
## What is mean total number of steps taken per day?
###For this part of the assignment, you can ignore the missing values in the dataset.
###1.Calculate the total number of steps taken per day
```{r}
steps_per_day <- aggregate(steps ~ date, data, sum)
colnames(steps_per_day) <- c("date","steps")
head(steps_per_day)
```
###2. Make a histogram of the total number of steps taken each day
```{r}
total.steps <- tapply(data$steps, data$date, FUN=sum, na.rm=TRUE)
ggplot(steps_per_day, aes(x = steps)) +
geom_histogram(fill = "green", binwidth = 1000) +
labs(title="Histogram of Steps Taken per Day",
x = "Number of Steps per Day", y = "Number of times in a day(Count)") + theme_bw()
```
###3. Calculate and report the mean and median of the total number of steps taken per day
```{r}
mean(total.steps, na.rm=TRUE)
median(total.steps, na.rm=TRUE)
```
## What is the average daily activity pattern?
###1.Make a time series plot (i.e. type = "l") of the 5-minute interval (x-axis) and the average number of steps taken, averaged across all days (y-axis)
```{r}
mean_data <- aggregate(data$steps,
by=list(data$interval),
FUN=mean,
na.rm=TRUE)
names(mean_data) <- c("interval", "mean")
head(mean_data)
```
```{r}
mean_data <- aggregate(data$steps,
list(interval = as.numeric(as.character(data$interval))),
FUN = "mean",
na.rm=TRUE)
colnames(mean_data) <- c("interval", "mean")
plot(mean_data$interval, mean_data$mean, type="l", col="blue")
```
## Imputing missing values
###1.Calculate and report the total number of missing values in the dataset (i.e. the total number of rows with NAs)
```{r}
NA_count <- sum(is.na(data$steps))
NA_pos <- which(is.na(data$steps))
```
###2.Devise a strategy for filling in all of the missing values in the dataset.
```{r}
mean_vec <- rep(mean(data$steps, na.rm=TRUE), times=length(NA_pos))
```
###3.Create a new dataset that is equal to the original dataset but with the missing data filled in.
```{r}
data_NAN <- data
data_NAN[NA_pos, "steps"] <- mean_vec
head(data_NAN)
```
###4. Make a histogram of the total number of steps taken each day and Calculate and report the mean and median total number of steps taken per day.
```{r}
agg_data <- aggregate(data_NAN$steps, by=list(data_NAN$date), FUN=sum)
names(agg_data) <- c("date", "total")
hist(agg_data$total,
breaks=seq(from=0, to=25000, by=2500),
col="green",
xlab="Total number of steps",
ylim=c(0, 30),
main="Histogram of the total number of steps taken each day\n(NA replaced by mean value)")
```
```{r}
round(mean(agg_data$total))
round(median(agg_data$total))
```
## Are there differences in activity patterns between weekdays and weekends?
```{r}
agg <- aggregate(steps ~ interval + daytype, data=data, mean)
plot4 <- xyplot(agg$Steps ~ agg$interval | agg$daytype,
layout = c(1, 2), type = "l",
xlab = "Interval", ylab = "Number of steps")
print(plot4)
```
```{r}
library(knitr)
opts_chunk$set(echo = TRUE, results = 'hold')
library(data.table)
library(ggplot2)
```
---
title: "Reproducible Research: Peer Assessment 1"
output:
html_document:
keep_md: true
---
## Loading and preprocessing the data
```{r}
setwd("G:/Github/RepData_PeerAssessment1")
unzip(zipfile="activity.zip")
data <- read.csv("activity.csv", header = TRUE, sep = ',', colClasses = c("numeric", "character", "integer"))
data$date <- as.Date(data$date, format = "%Y-%m-%d")
data$interval <- as.factor(data$interval)
data$weekday <- tolower(weekdays(data$date))
data$daytype <- ifelse(data$weekday == "saturday" | data$weekday == "sunday", "weekend", "weekday")
str(data)
```
## What is mean total number of steps taken per day?
###For this part of the assignment, you can ignore the missing values in the dataset.
###1.Calculate the total number of steps taken per day
```{r}
steps_per_day <- aggregate(steps ~ date, data, sum)
colnames(steps_per_day) <- c("date","steps")
head(steps_per_day)
```
###2. Make a histogram of the total number of steps taken each day
```{r}
total.steps <- tapply(data$steps, data$date, FUN=sum, na.rm=TRUE)
ggplot(steps_per_day, aes(x = steps)) +
geom_histogram(fill = "green", binwidth = 1000) +
labs(title="Histogram of Steps Taken per Day",
x = "Number of Steps per Day", y = "Number of times in a day(Count)") + theme_bw()
```
###3. Calculate and report the mean and median of the total number of steps taken per day
```{r}
mean(total.steps, na.rm=TRUE)
median(total.steps, na.rm=TRUE)
```
## What is the average daily activity pattern?
###1.Make a time series plot (i.e. type = "l") of the 5-minute interval (x-axis) and the average number of steps taken, averaged across all days (y-axis)
```{r}
mean_data <- aggregate(data$steps,
by=list(data$interval),
FUN=mean,
na.rm=TRUE)
names(mean_data) <- c("interval", "mean")
head(mean_data)
```
```{r}
mean_data <- aggregate(data$steps,
list(interval = as.numeric(as.character(data$interval))),
FUN = "mean",
na.rm=TRUE)
colnames(mean_data) <- c("interval", "mean")
plot(mean_data$interval, mean_data$mean, type="l", col="blue")
```
## Imputing missing values
###1.Calculate and report the total number of missing values in the dataset (i.e. the total number of rows with NAs)
```{r}
NA_count <- sum(is.na(data$steps))
NA_pos <- which(is.na(data$steps))
```
###2.Devise a strategy for filling in all of the missing values in the dataset.
```{r}
mean_vec <- rep(mean(data$steps, na.rm=TRUE), times=length(NA_pos))
```
###3.Create a new dataset that is equal to the original dataset but with the missing data filled in.
```{r}
data_NAN <- data
data_NAN[NA_pos, "steps"] <- mean_vec
head(data_NAN)
```
###4. Make a histogram of the total number of steps taken each day and Calculate and report the mean and median total number of steps taken per day.
```{r}
agg_data <- aggregate(data_NAN$steps, by=list(data_NAN$date), FUN=sum)
names(agg_data) <- c("date", "total")
hist(agg_data$total,
breaks=seq(from=0, to=25000, by=2500),
col="green",
xlab="Total number of steps",
ylim=c(0, 30),
main="Histogram of the total number of steps taken each day\n(NA replaced by mean value)")
```
```{r}
round(mean(agg_data$total))
round(median(agg_data$total))
```
## Are there differences in activity patterns between weekdays and weekends?
```{r}
agg <- aggregate(steps ~ interval + daytype, data=data, mean)
library(lattice)
plot4 <- xyplot(agg$Steps ~ agg$interval | agg$daytype,
layout = c(1, 2), type = "l",
xlab = "Interval", ylab = "Number of steps")
print(plot4)
```
```{r}
library(knitr)
opts_chunk$set(echo = TRUE, results = 'hold')
library(data.table)
library(ggplot2)
```
---
title: "Reproducible Research: Peer Assessment 1"
output:
html_document:
keep_md: true
---
## Loading and preprocessing the data
```{r}
setwd("G:/Github/RepData_PeerAssessment1")
unzip(zipfile="activity.zip")
data <- read.csv("activity.csv", header = TRUE, sep = ',', colClasses = c("numeric", "character", "integer"))
data$date <- as.Date(data$date, format = "%Y-%m-%d")
data$interval <- as.factor(data$interval)
data$weekday <- tolower(weekdays(data$date))
data$daytype <- ifelse(data$weekday == "saturday" | data$weekday == "sunday", "weekend", "weekday")
str(data)
```
## What is mean total number of steps taken per day?
###For this part of the assignment, you can ignore the missing values in the dataset.
###1.Calculate the total number of steps taken per day
```{r}
steps_per_day <- aggregate(steps ~ date, data, sum)
colnames(steps_per_day) <- c("date","steps")
head(steps_per_day)
```
###2. Make a histogram of the total number of steps taken each day
```{r}
total.steps <- tapply(data$steps, data$date, FUN=sum, na.rm=TRUE)
ggplot(steps_per_day, aes(x = steps)) +
geom_histogram(fill = "green", binwidth = 1000) +
labs(title="Histogram of Steps Taken per Day",
x = "Number of Steps per Day", y = "Number of times in a day(Count)") + theme_bw()
```
###3. Calculate and report the mean and median of the total number of steps taken per day
```{r}
mean(total.steps, na.rm=TRUE)
median(total.steps, na.rm=TRUE)
```
## What is the average daily activity pattern?
###1.Make a time series plot (i.e. type = "l") of the 5-minute interval (x-axis) and the average number of steps taken, averaged across all days (y-axis)
```{r}
mean_data <- aggregate(data$steps,
by=list(data$interval),
FUN=mean,
na.rm=TRUE)
names(mean_data) <- c("interval", "mean")
head(mean_data)
```
```{r}
mean_data <- aggregate(data$steps,
list(interval = as.numeric(as.character(data$interval))),
FUN = "mean",
na.rm=TRUE)
colnames(mean_data) <- c("interval", "mean")
plot(mean_data$interval, mean_data$mean, type="l", col="blue")
```
## Imputing missing values
###1.Calculate and report the total number of missing values in the dataset (i.e. the total number of rows with NAs)
```{r}
NA_count <- sum(is.na(data$steps))
NA_pos <- which(is.na(data$steps))
```
###2.Devise a strategy for filling in all of the missing values in the dataset.
```{r}
mean_vec <- rep(mean(data$steps, na.rm=TRUE), times=length(NA_pos))
```
###3.Create a new dataset that is equal to the original dataset but with the missing data filled in.
```{r}
data_NAN <- data
data_NAN[NA_pos, "steps"] <- mean_vec
head(data_NAN)
```
###4. Make a histogram of the total number of steps taken each day and Calculate and report the mean and median total number of steps taken per day.
```{r}
agg_data <- aggregate(data_NAN$steps, by=list(data_NAN$date), FUN=sum)
names(agg_data) <- c("date", "total")
hist(agg_data$total,
breaks=seq(from=0, to=25000, by=2500),
col="green",
xlab="Total number of steps",
ylim=c(0, 30),
main="Histogram of the total number of steps taken each day\n(NA replaced by mean value)")
```
```{r}
round(mean(agg_data$total))
round(median(agg_data$total))
```
## Are there differences in activity patterns between weekdays and weekends?
```{r}
agg <- aggregate(steps ~ interval + daytype, data=data_NAN, mean)
library(lattice)
plot4 <- xyplot(agg$Steps ~ agg$interval | agg$daytype,
layout = c(1, 2), type = "l",
xlab = "Interval", ylab = "Number of steps")
print(plot4)
```
agg
library(lattice)
plot4 <- xyplot(agg$Steps ~ agg$interval | agg$daytype,
layout = c(1, 2), type = "l",
xlab = "Interval", ylab = "Number of steps")
print(plot4)
library(lattice)
plot4 <- xyplot(agg$Steps ~ agg$interval | agg$daytype,
layout = c(1, 2), type = "s",
xlab = "Interval", ylab = "Number of steps")
print(plot4)
library(lattice)
plot4 <- xyplot(agg$Steps | agg$daytype)
print(plot4)
library(lattice)
plot4 <- xyplot(agg$Steps, agg)
print(plot4)
library(lattice)
xyplot(agg$Steps, agg)
```{r}
library(knitr)
opts_chunk$set(echo = TRUE, results = 'hold')
library(data.table)
library(ggplot2)
```
---
title: "Reproducible Research: Peer Assessment 1"
output:
html_document:
keep_md: true
---
## Loading and preprocessing the data
```{r}
setwd("G:/Github/RepData_PeerAssessment1")
unzip(zipfile="activity.zip")
data <- read.csv("activity.csv", header = TRUE, sep = ',', colClasses = c("numeric", "character", "integer"))
data$date <- as.Date(data$date, format = "%Y-%m-%d")
data$interval <- as.factor(data$interval)
data$weekday <- tolower(weekdays(data$date))
data$daytype <- ifelse(data$weekday == "saturday" | data$weekday == "sunday", "weekend", "weekday")
str(data)
```
## What is mean total number of steps taken per day?
###For this part of the assignment, you can ignore the missing values in the dataset.
###1.Calculate the total number of steps taken per day
```{r}
steps_per_day <- aggregate(steps ~ date, data, sum)
colnames(steps_per_day) <- c("date","steps")
head(steps_per_day)
```
###2. Make a histogram of the total number of steps taken each day
```{r}
total.steps <- tapply(data$steps, data$date, FUN=sum, na.rm=TRUE)
ggplot(steps_per_day, aes(x = steps)) +
geom_histogram(fill = "green", binwidth = 1000) +
labs(title="Histogram of Steps Taken per Day",
x = "Number of Steps per Day", y = "Number of times in a day(Count)") + theme_bw()
```
###3. Calculate and report the mean and median of the total number of steps taken per day
```{r}
mean(total.steps, na.rm=TRUE)
median(total.steps, na.rm=TRUE)
```
## What is the average daily activity pattern?
###1.Make a time series plot (i.e. type = "l") of the 5-minute interval (x-axis) and the average number of steps taken, averaged across all days (y-axis)
```{r}
mean_data <- aggregate(data$steps,
by=list(data$interval),
FUN=mean,
na.rm=TRUE)
names(mean_data) <- c("interval", "mean")
head(mean_data)
```
```{r}
mean_data <- aggregate(data$steps,
list(interval = as.numeric(as.character(data$interval))),
FUN = "mean",
na.rm=TRUE)
colnames(mean_data) <- c("interval", "mean")
plot(mean_data$interval, mean_data$mean, type="l", col="blue")
```
## Imputing missing values
###1.Calculate and report the total number of missing values in the dataset (i.e. the total number of rows with NAs)
```{r}
NA_count <- sum(is.na(data$steps))
NA_pos <- which(is.na(data$steps))
```
###2.Devise a strategy for filling in all of the missing values in the dataset.
```{r}
mean_vec <- rep(mean(data$steps, na.rm=TRUE), times=length(NA_pos))
```
###3.Create a new dataset that is equal to the original dataset but with the missing data filled in.
```{r}
data_NAN <- data
data_NAN[NA_pos, "steps"] <- mean_vec
head(data_NAN)
```
###4. Make a histogram of the total number of steps taken each day and Calculate and report the mean and median total number of steps taken per day.
```{r}
agg_data <- aggregate(data_NAN$steps, by=list(data_NAN$date), FUN=sum)
names(agg_data) <- c("date", "total")
hist(agg_data$total,
breaks=seq(from=0, to=25000, by=2500),
col="green",
xlab="Total number of steps",
ylim=c(0, 30),
main="Histogram of the total number of steps taken each day\n(NA replaced by mean value)")
```
```{r}
round(mean(agg_data$total))
round(median(agg_data$total))
```
## Are there differences in activity patterns between weekdays and weekends?
```{r}
agg <- aggregate(steps ~ interval + daytype, data=data_NAN, mean)
library(lattice)
ggplot(agg, aes(x=interval, y=steps)) +
geom_line(color="violet") +
facet_wrap(~ daytype, nrow=2, ncol=1) +
labs(x="Interval", y="Number of steps") +
theme_bw()
```
agg
ggplot(data_NAN, aes(x=interval, y=steps)) +
geom_line(color="violet") +
facet_wrap(~ daytype, nrow=2, ncol=1) +
labs(x="Interval", y="Number of steps") +
theme_bw()
plot4 <- xyplot(data_NAN$Steps ~ data_NAN$interval | data_NAN$daytype,
layout = c(1, 2), type = "l",
xlab = "Interval", ylab = "Number of steps")
print(plot4)
xyplot(steps ~ interval | daytype, data_NAN,
type="l",
lwd=1,
xlab="Interval",
ylab="Number of steps",
layout=c(1,2))
xyplot(steps ~ interval | daytype, agg,
type="l",
lwd=1,
xlab="Interval",
ylab="Number of steps",
layout=c(1,2))
xyplot(steps ~ interval | daytype, agg,
type="l",
lwd=1,
xlab="Interval",
ylab="Number of steps",
layout=c(2,1))
xyplot(steps ~ interval | daytype, agg,
type="l",
lwd=1,
xlab="Interval",
ylab="Number of steps",
layout=c(1,2))
